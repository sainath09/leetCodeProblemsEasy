tion for a binary tree node.

 * struct TreeNode {

 *     int val;

 *     TreeNode *left;

 *     TreeNode *right;

 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}

 * };

 */

class Solution {

public:

    int heightFunc(TreeNode* root){

        int lheight=0;

        int rheight=0;

        if(root==NULL)

            return 0;

        else 

             lheight=heightFunc(root->left)+1;

             rheight=heightFunc(root->right)+1;

        return max(lheight,rheight);

    }

    void levelOrder(vector<int>& iVec,TreeNode* root,int level){

        if(root==NULL) return;

        if(level==1) iVec.push_back(root->val);

        else{

            levelOrder(iVec,root->left,level-1);

            levelOrder(iVec,root->right,level-1);

        }

    }

    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {

        vector<vector<int>> vec;

       vector<int> iVec;

        int height=heightFunc(root);

        cout<<height<<endl;

        for(int i=1;i<=height;i++){

            levelOrder(iVec,root,i);

            if(i%2==0) reverse(iVec.begin(),iVec.end());

            vec.push_back(iVec);

            iVec.clear();

        }

       return vec; 

    }

};
